name: Continuous Integration
on: push

jobs:
  ci-master:
    name: Run continuous integration tests
    runs-on: ubuntu-18.04

    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '2.7'

      - name: Check out code
        uses: actions/checkout@v2

      - name: Install packages
        run: |
          sudo apt-get update -qq
          sudo apt-get install systemd git python-pip postgresql-11 solr-jetty openjdk-8-jdk libcommons-fileupload-java:amd64 redis-server
          sudo pip install "moto[server]"

      - name: Start services
        run: |
          sudo service postgresql start
          sudo service redis-server start
          moto_server s3 &

      - name: Check out CKAN
        uses: actions/checkout@v2
        with:
          repository: ckan/ckan
          path: ckan
          ref: ckan-2.8.6

      - name: Install CKAN dependencies
        run: |
          cd ckan
          sudo pip install -r requirements.txt
          sudo pip install -r dev-requirements.txt
          sudo pip install -r requirement-setuptools.txt
          sudo python setup.py develop

      - name: Install CKAN extension dependencies
        run: |
          sudo python setup.py develop
          sudo pip install -r requirements.txt
          sudo pip install -r dev-requirements.txt

      - name: Create Solr Jetty systemd entry
        run: |
          sudo mkdir -p /etc/systemd/system/jetty9.service.d
          echo "[Service]\nReadWritePaths=/var/lib/solr" | sudo tee /etc/systemd/system/jetty9.service.d/solr.conf

      - name: Setup Solr
        run: |
          sed '16,21d' /etc/solr/solr-jetty.xml | sudo tee /etc/solr/solr-jetty.xml
          sudo systemctl daemon-reload
          printf "NO_START=0\nJETTY_HOST=127.0.0.1\nJETTY_ARGS=\"jetty.http.port=8983\"" | sudo tee /etc/default/jetty9
          sudo cp ckan/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml
          sudo service jetty9 restart

      - name: Setup database
        run: |
          sudo -u postgres psql -c "CREATE USER ckan_default WITH PASSWORD 'pass';"
          sudo -u postgres psql -c 'CREATE DATABASE ckan_test WITH OWNER ckan_default;'
          cd ckan
          paster db init -c test-core.ini

      - name: Prepare test configuration
        run: |
          mkdir -p subdir
          cp test.ini subdir

      - name: Run unit tests
        run: pytest --ckan-ini=subdir/test.ini --cov=ckanext.s3filestore --disable-warnings ckanext/s3filestore/tests

      - name: Generate coverage report
        uses: coverallsapp/github-action@master
